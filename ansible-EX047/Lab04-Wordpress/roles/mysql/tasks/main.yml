---
- name: MYSQL --> Create folder conf.d if it not exist
  file:
    path: "{{ mysql_conf_dir }}"
    state: directory
    owner: mysql
    group: mysql
    mode: "0755"

- name: Instal Mysql
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ base_mysql_packet }}"

- name: STOP Mysql after first installed
  service:
    name: "{{ mysql_daemon }}"
    state: stopped

- name: MYSQL create log folder
  file:
    path: /var/log/mysql
    state: directory
    owner: mysql
    group: mysql
    mode: "0755"

- name: MYSQL --> Create datadir if it not exist
  file:
    path: "{{ mysql_data_dir }}"
    state: directory
    owner: mysql
    group: mysql
    mode: "0755"

- name: MYSQL --> Get MySQL version.
  shell: "mysql --version"
  register: mysql_cli_version
  changed_when: false
  check_mode: false


- name: MYSQL --> Update my.cnf
  template:
    src: my.cnf.j2
    dest: "{{ mysql_config_file }}"
    owner: root
    group: root
    mode: "0644"
    force: "{{ overwrite_global_mycnf }}"
  notify: mysql_installed 

- name: MYSQL --> Start service
  service:
    name: mysql
    state: started

# UBUNTU SERVER 
- name: MYSQL --> Setup ROOT PASSWORD
  run_once: true
  mysql_user:
    name: "{{ mysql_root_name }}"
    password: "{{ mysql_root_password }}"
    host_all: yes
    login_user: root
  when: mysql_test_connection.stdout != "0" and ansible_distribution == "Ubuntu"

# REDHAT-CENTOS SERVER
#CentOS
- block: 
  - name: MYSQL --> Get temporary password for CentOS target
    shell: "grep 'temporary password' /var/log/mysql/mysql.err | sed -e 's/.* //'"
    register: mysql_temp_password

  - name: MySQL --> Set root password for CentOS target
    shell: mysql -u"{{ mysql_root_name }}" -p"{{ mysql_temp_password.stdout }}" --connect-expired-password -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mysql_root_password }}'; FLUSH PRIVILEGES;"
  when:  ansible_distribution == "CentOS"

- name: MYSQL --> Remove anonymous MySQL users.
  shell: mysql -u"{{ mysql_root_name }}" -p"{{ mysql_root_password }}" -e "DELETE FROM mysql.user WHERE user=''; FLUSH PRIVILEGES;"

- name: MYSQL --> Remove MySQL test database.
  shell: mysql -u"{{ mysql_root_name }}" -p"{{ mysql_root_password }}" -e "DELETE FROM mysql.db WHERE db='test%'; FLUSH PRIVILEGES;"  



- name: MYSQL --> Test connection
  become: no
  shell: mysql -u{{ mysql_root_name }} -p{{ mysql_root_password }} -e "SELECT 1" > /dev/null; echo $?
  register: mysql_test_connection
  ignore_errors: true